import powerbiVisualsApi from "powerbi-visuals-api";
import VisualConstructorOptions = powerbiVisualsApi.extensibility.visual.VisualConstructorOptions;
import VisualUpdateOptions = powerbiVisualsApi.extensibility.visual.VisualUpdateOptions;
import IVisual = powerbiVisualsApi.extensibility.visual.IVisual;
import "./../style/visual.less";
export declare class DatePicker implements IVisual {
    private arrowDown;
    private arrowUp;
    private calendarContainer;
    private calendarIconEndDate;
    private calendarIconStartDate;
    private calendarInputEnabled;
    private calendarInteractive;
    private calendarPeriods;
    private calendarProperties;
    private calendarSvg;
    private static categories;
    private customDateContainer;
    private dataView;
    private static dateField;
    private dateInputContainer;
    private dateRangeContainer;
    private dateRangeDropDown;
    private datesFiltered;
    private static DefaultTextXOffset;
    private static DefaultTextYOffset;
    private endDateInput;
    private endDateInputContainer;
    private host;
    private jsonFilters;
    private monthLabel;
    private options;
    private viewport;
    private selectedDateRange;
    private startDateInput;
    private startDateInputContainer;
    private rootSelection;
    private targetInput;
    private static CalendarMargins;
    private static CalendarDatePeriods;
    private applyDateRange;
    private datePeriodChanged;
    getFilterAction(startDate: Date, endDate: Date): powerbiVisualsApi.FilterAction;
    private applyFilter;
    private displayMonth;
    private renderCalendar;
    private refreshCalendar;
    private updateCalendarVisibility;
    constructor(options: VisualConstructorOptions);
    update(options: VisualUpdateOptions): void;
}
